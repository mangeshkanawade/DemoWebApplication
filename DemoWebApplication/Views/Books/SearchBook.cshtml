@model DemoWebApplication.Models.BooksViewModel
@{
    ViewBag.Title = "SearchBook";
}
<head>
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

</head>
<h2>SearchBook</h2>

<label class="text-success">
    Select Search Criteria for Find Books
</label>
<div class="container">
    <form id="searchForm" class="form-inline" method="post">

        @{
            @Html.TextBoxFor(
model => model.BookName,
null,
new { @class = "form-control", @placeholder = "Enter Book Name " })

            @Html.DropDownListFor(
model => model.BookCategoryId,
new SelectList(Model.BooksCategoriesList, "BookCategoryId", "BookCategoryName"),
"Select Cateogry",
new { @class = "form-control" })

            @Html.DropDownListFor(
model => model.BookPublisherId,
new SelectList(Model.BooksPublicationsList, "BookPublisherId", "BookPublisherName"),
"Select Publisher",
new { @class = "form-control" })


            @Html.HiddenFor(model => model.PageNumber, new { @Value = Model.PageNumber })

            <input id="submitBtn" type="button" value="Search" class="btn btn-success" />

            <a class="btn btn-danger" href="SearchBook">Clear Form</a>
            <a class="btn btn-info" href="AddBook">Add Book</a>
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                Add Book (new)
            </button>
            <br />
            <br />
            <b class="text-info">Page Size : </b>
            @Html.DropDownList(
"PageSize",
new List<SelectListItem> {
               new SelectListItem { Text = "3", Value = "3" },
               new SelectListItem { Text = "5", Value = "5" },
               new SelectListItem { Text = "10", Value = "10" },
               new SelectListItem { Text = "100", Value = "100" }},
new { @class = "form-control" })

            <br />
        }

        <label id="msg" style="color:dodgerblue"> </label>

        <div id="partial">

        </div>
    </form>
</div>


<!-- Modal -->


<form id="popupAddBookForm" class="form-inline" method="post">

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="exampleModalLabel">Add Book</h2>
                    <button id="closeBtn" type="button" class="close" onclick="this.form.reset()" data-dismiss="modal" aria-labe l="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="msgPopup"></div>
                    @*@Html.ValidationSummary()*@
                    @Html.HiddenFor(
                                model => model.BookId)
                    <b>Name : </b>
                    @Html.TextBoxFor(
                          model => model.BookName,
                          null,
                          new { @id = "SearchBookName", @class = "form-control", @placeholder = "Enter Book Name " })

                    @Html.ValidationMessageFor(model => model.BookName, null, new { @class = "text-danger" })<br />

                    <b>Cateogry : </b>
                    @Html.DropDownListFor(
                             model => model.BookCategoryId,
                             new SelectList(Model.BooksCategoriesList, "BookCategoryId", "BookCategoryName"),
                             "Select Cateogry", new { @id = "SearchBookCategory", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.BookCategoryId, null, new { @class = "text-danger" })<br />
                    <b>Publication : </b>
                    @Html.DropDownListFor(
                             model => model.BookPublisherId,
                             new SelectList(Model.BooksPublicationsList, "BookPublisherId", "BookPublisherName"),
                             "Select Publisher", new { @id = "SearchBookPublication", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.BookPublisherId, null, new { @class = "text-danger" })<br />
                    <b>Quantity : </b>
                    @Html.TextBoxFor(
                             model => model.BookQuantity,
                             null,
                             new { @id = "SearchBookQuantity", @type = "number", @class = "form-control", @placeholder = "Enter Book Quantity " }
                             )
                    @Html.ValidationMessageFor(model => model.BookQuantity, null, new { @class = "text-danger" })<br />


                    @Html.CheckBox(
                        "IsActive",
                        new {@class = "checkbox-inline" }) <label class="checkbox-inline"><b>Is Active</b></label>

                    <br />
                    <br />
                </div>
                <div class="modal-footer">
                    <button id="formSubmitBtn" type="button" class="btn btn-success"> Add Book </button>
                    <button id="freset" type="reset" class="btn btn-danger"> Clear Form </button>
                </div>

            </div>
        </div>
    </div>
</form>



<script>
    $(document).ready(function () {
        SearchBtnClick();



        $("#submitBtn").click(function () {
            $("#PageNumber").val(1);
            SearchBtnClick();
        });



        $("#closeBtn").click(function () {
            $("#msgPopup").html('');
            SearchBtnClick();
        });

        $("#freset").click(function () {
            $("#msgPopup").html('');
            this.form.reset();
        });

        $("body").on("click", "#SelectedPage", function () {
            $("#PageNumber").val($(this).text());
            SearchBtnClick();
        });

        $("body").on("click", "#prev", function () {
            var currentPage = $("#PageNumber").val();
            $("#PageNumber").val(--currentPage);
            SearchBtnClick();
        });

        $("body").on("click", "#first", function () {
            var currentPage = $("#PageNumber").val(1);
            $("#PageNumber").val(currentPage);
            SearchBtnClick();
        });

        $("body").on("click", "#next", function () {
            var currentPage = $("#PageNumber").val();
            $("#PageNumber").val(++currentPage);
            SearchBtnClick();
        });

        $("#PageSize").change(function () {
            $("#PageNumber").val(1);
            SearchBtnClick();
        });

        $("#resetBtn").click(function () {
            $("#PageNumber").val(1);
            this.form.reset();
            sessionStorage.clear();
            SearchBtnClick();
        });

        function SearchBtnClick() {

            $.ajax({
                url: "/Books/SearchBook",
                method: "POST",
                data: $("#searchForm").serialize(),

                success: function (data) {
                    $("#partial").html(data);
                }
            });
        }
        $("body").on("click", "#formSubmitBtn", function () {
            var form = $("#popupAddBookForm");
            form.validate();
            if (form.valid()) {
                AddBook();
            }
        });


        function AddBook() {
            $("#exampleModalLabel").text("Add Book");
            $.ajax({
                url: "/Books/AddBook",
                method: "POST",
                data: $("#popupAddBookForm").serialize(),
                success: function (data) {

                    console.log('in Success ' + data.BookId);
                    var msg = '<div class="alert alert-success"><strong> Success ! </strong> Book <strong>' + data.BookName + '</strong> Added Successfully.';
                    $("#msgPopup").html(msg);
                    $("#addBookForm")[0].reset();

                },
                error: function (data) {
                    var msg = '<div class="alert alert-danger"><strong> Fail! </strong> Add Book Error';
                    $("#msgPopup").html(msg);
                }
            });
            stopImmediatePropagation();
        }
    });
</script>
